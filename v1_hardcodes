from bokeh.plotting import figure, output_file, show
from bokeh.models import Range1d, LinearAxis, SingleIntervalTicker
from bokeh.io import show, output_notebook, curdoc
from bokeh.layouts import gridplot
from bokeh.embed import components
import openpyxl
from openpyxl import Workbook
from openpyxl import load_workbook
import math
import glob
import numpy as np
from bokeh import themes
from bokeh.themes import built_in_themes, Theme
from bokeh.models.tools import PanTool, ResetTool, WheelZoomTool, HoverTool

output_file("logviewer.html")

TOOLTIPS = [
    ("(curve)", "($name)"),
    #('(depth)','($y)'),
    ("(value)", "($x)")
]

#create list
depth=[]
gammaray=[]
caliper=[]
deep=[]
shallow=[]
NPHI=[]
RHOB=[]


#this code import the log info from excel instead of LAS
def Excelinput():
    filename= 'D:\Work\HPI\Clients files\HOPE(OSES)\Book1.xlsx' #directory of the xls file of the well
    wb = openpyxl.load_workbook(filename)
    ws=wb['Sheet1']
    for row in range (2,ws.max_row+1):
        depths=ws.cell(row=row,column=2)
        depth.append(depths.value)
        GRs=ws.cell(row=row,column=5)
        gammaray.append(GRs.value)
        calipers=ws.cell(row=row,column=3)
        caliper.append(calipers.value)
        ILDs=ws.cell(row=row,column=6)
        deep.append(ILDs.value)
        ILMs=ws.cell(row=row,column=7)
        shallow.append(ILMs.value)
        NPHIs=ws.cell(row=row,column=9)
        NPHI.append(NPHIs.value)
        RHOBs=ws.cell(row=row,column=11)
        RHOB.append(RHOBs.value)

Excelinput()

#NaN Filter
for i in range (len(deep)):
    if deep[i]>1000:
        deep[i]=np.nan

for i in range (len(shallow)):
    if shallow[i]>1000:
        shallow[i]=np.nan

fig = figure(tooltips=TOOLTIPS, x_axis_location='above', plot_height=500, plot_width=160)
          
# Define x-axis
fig.xaxis.axis_label = 'Gamma Ray [gAPI]'
fig.x_range = Range1d(start=0, end=150)
fig.xaxis.ticker=SingleIntervalTicker(interval=30)
fig.xaxis.axis_label_text_color = 'green'

#test 2nd x-axis
fig.extra_x_ranges ['caliper'] = Range1d(start=5, end=20)
fig.add_layout(LinearAxis(ticker=SingleIntervalTicker(interval=5), x_range_name='caliper', axis_label='Caliper [inch]', axis_label_text_color = 'orange'), 'above')


# Define 1st LHS y-axis
fig.yaxis.axis_label = 'Depth [feet]'
fig.y_range = Range1d(start=800, end=550,  bounds=(None,None))


# Define Gammaray curve
fig.line(
    y = depth,
    x = gammaray,
    name = 'GR',
    color = 'green'
)

# Define Caliper curve
fig.line(
    y = depth,
    x = caliper,
    name = 'Caliper',
    x_range_name = 'caliper',
    color = 'orange'
)

fig2 = figure(tooltips=TOOLTIPS, x_axis_location='above', x_axis_type="log", plot_height=500,plot_width=160)

fig2.xgrid.minor_grid_line_alpha=0.1
fig2.xgrid.minor_grid_line_color='navy'
# Define x-axis
fig2.xaxis.axis_label = 'Deep [Ohmm]'
fig2.xaxis.axis_label_text_color = 'red'
fig2.x_range = Range1d(start=0.2, end=100)


#test 2nd x-axis
fig2.extra_x_ranges ['shallow'] = fig2.x_range
fig2.add_layout(LinearAxis(x_range_name='shallow', axis_label='Shallow [Ohmm]', axis_label_text_color = 'fuchsia', major_label_text_color= None, major_tick_line_color=None), 'above')


# Define 1st LHS y-axis
fig2.yaxis.axis_label = None
fig2.y_range = fig.y_range
fig2.yaxis.major_tick_line_color = None  # turn off y-axis major ticks
fig2.yaxis.minor_tick_line_color = None  # turn off y-axis minor ticks
fig2.yaxis.major_label_text_color = None  #note that this leaves space between the axis and the axis label 



# Define Deep resistivity curve
fig2.line(
    y = depth,
    x = deep,
    name = 'Deep',
    color = 'red'
)

# Define Shallow resistivity curve
fig2.line(
    y = depth,
    x = shallow,
    name = 'shallow',
    x_range_name = 'shallow',
    color = 'fuchsia'
    
)


fig3 = figure(tooltips=TOOLTIPS, x_axis_location='above', plot_height=500, plot_width=160)


# Define x-axis
fig3.xaxis.axis_label = 'NPHI [%]'
fig3.x_range = Range1d(start=0.7, end=-0.15)
fig3.xaxis.axis_label_text_color = 'cyan'


#test 2nd x-axis
fig3.extra_x_ranges ['rhob'] = Range1d(start=1.3, end=2.95)
fig3.add_layout(LinearAxis(ticker=SingleIntervalTicker(interval=0.3), x_range_name='rhob', axis_label='RHOB [gr/cm3]', axis_label_text_color = 'red'), 'above')


# Define 1st LHS y-axis
fig3.yaxis.axis_label = None
fig3.y_range = fig.y_range
fig3.yaxis.major_tick_line_color = None  # turn off y-axis major ticks
fig3.yaxis.minor_tick_line_color = None  # turn off y-axis minor ticks
fig3.yaxis.major_label_text_color = None  #note that this leaves space between the axis and the axis label 

# Define NPHI curve
fig3.line(
    y = depth,
    x = NPHI,
    name = 'NPHI',
    color = 'cyan'
)

# Define RHOB curve
fig3.line(
    y = depth,
    x = RHOB,
    name = 'RHOB',
    x_range_name = 'rhob',
    color = 'red'
    
)

fig.tools=[WheelZoomTool(),PanTool(),ResetTool()]
fig2.tools=[WheelZoomTool(),PanTool(),ResetTool()]
fig3.tools=[WheelZoomTool(),PanTool(),ResetTool()]
fig.add_tools(HoverTool(tooltips=TOOLTIPS))
fig2.add_tools(HoverTool(tooltips=TOOLTIPS))
fig3.add_tools(HoverTool(tooltips=TOOLTIPS))
p=gridplot([[fig, fig2, fig3]], toolbar_location='below', sizing_mode='scale_both', toolbar_options=dict(logo=None), merge_tools=True)



theme = Theme(json={
    'attrs': {
        'Figure': {
            'background_fill_color': '#222222',
            'border_fill_color': '#222222',
            'outline_line_color': '#444444'
            },
        'Axis': {
            'axis_line_color': "white",
            'axis_label_text_color': "white",
            'major_label_text_color': "white",
            'major_tick_line_color': "white",
            'minor_tick_line_color': "white",
            'minor_tick_line_color': "white"
            },
        'Grid': {
            'grid_line_dash': [6, 4],
            'grid_line_alpha': .5
            },
        'Circle': {
            'fill_color': 'lightblue',
            'size': 10,
            },
        'Title': {
            'text_color': "white"
            }
        }
    })
            
doc = curdoc()
doc.theme=theme
doc.add_root(p)
show (p)

